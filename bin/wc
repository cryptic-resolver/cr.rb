#!/usr/bin/env ruby
# coding: utf-8
# ---------------------------------------------------
# File          : wc.rb
# Authors       : ccmywish <ccmywish@qq.com>
# Created on    : <2021-07-16>
# Last modified : <2022-10-20>
#
# This file is used to count the key words in all
# our local dictionaries (rather than only default 
# dicts)
#
# Usage:
#      wc       # Output count in each file
#      wc --all # Only output the total counts 
#      wc --uwc # Update word count in README
#
# ---------------------------------------------------

require 'tomlrb'

op = ARGV.shift

if (op == "--all") or (op == "--uwc")
  ALL_MODE = true
else
  ALL_MODE = false
end

local_dicts = Dir.children File.expand_path("~/.cryptic-resolver/")
local_dicts = local_dicts.map do |path| 
  File.join(
    File.expand_path("~/.cryptic-resolver/"), 
    path
  )
end


# A file is like 
#   a.toml
#   d.toml
# So we should first cd into the cryptic_computer sheet
def load_sheet(file)
  if File.exist? file
    return Tomlrb.load_file file # gem 'tomlrb'
  else
    nil
  end
end


def update_wc
  wc = $WordCount
  badge_url = "https://img.shields.io/badge/Keywords%20Inlcuded-#{wc}-brightgreen"

  file = File.read("./README.md")
  new_file = ""
  file.each_line do |l|
    if l.start_with?("- Currently we have **")
      new_file = new_file + "- Currently we have **#{wc}** keywords explained in all of our ***cryptic_xxx*** sheets.\n"
    elsif l.start_with?("[![word-count](https://img.shields")
      new_file = new_file + "[![word-count](#{badge_url})](#cryptic-sheets)\n"
    else
      new_file = new_file + l
    end
  end

  # puts new_file
  
  File.open("README.md","w") do |f|
    File.write f,new_file
  end
end


$WordCount = 0

def count_dict_words(dict_dir)
  Dir.chdir(dict_dir) do
  wc = 0

  Dir.children(dict_dir).each do |entry|
    next unless entry.end_with?('.toml')
    dict = load_sheet(entry)
    count = dict.keys.count
  
    puts "#{entry}: #{count}" unless ALL_MODE
    wc = wc + count
  end

  $WordCount += wc

  unless ALL_MODE
    puts "#{dict_dir} words: #{wc}\n\n"
  end

  end
end

local_dicts.each do |s|
  count_dict_words(s)
end

if op == '--all'
  print $WordCount # must use print, or rake `` will parse to a new line
elsif op == '--uwc'
  update_wc
end
